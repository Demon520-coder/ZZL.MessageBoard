@model ZZL.MessageBoard.Web.Models.AccountViewModel.LoginViewModel
@{
    ViewBag.Title = "Login";
}

<br />
@using (Html.BeginForm("Login", "Account", new { returnUrl = Request.QueryString["returnUrl"] }, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken();

    <div class="form-group">
        @Html.LabelFor(s => s.UserName, new { @class = "col-sm-3 control-label" })
        <div class="col-sm-5">
            @Html.TextBoxFor(s => s.UserName, new { @class = "form-control" })
            @Html.ValidationMessageFor(s => s.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(s => s.PassWord, new { @class = "col-sm-3 control-label" })
        <div class="col-sm-5">
            @Html.PasswordFor(s => s.PassWord, new { @class = "form-control" })
            @Html.ValidationMessageFor(s => s.PassWord, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(s => s.ValidateCode, new { @class = "col-sm-3 control-label" })
        <div class="col-sm-5 form-inline">
            @Html.TextBoxFor(s => s.ValidateCode, new { @class = "form-control", style = "width:150px;" })
            <img src="@Url.Action("ValidateCode","Account")" onclick="this.src = this.src + '?rd=' + Math.random()" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-lg-offset-3 col-sm-5">
            @Html.ValidationMessageFor(s => s.ValidateCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-offset-3 col-sm-5">
            <button type="submit" class="btn btn-default">登录</button>
            <a href="@Url.Action("Register","Account")" class="btn btn-default">注册</a>
        </div>
    </div>



}

